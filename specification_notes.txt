This is based on the paper "Learning-Based Computation Offloading for
IoT Devices With Energy Harvesting" by M. Min, et. al. Published in

IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, VOL. 68, NO. 2, FEBRUARY 2019

* 1 device, many edge servers
* time advances in step; current is k
  * the device has new tasks that total C_k bits of input data
  * the new tasks are split into N_x (equal?) parts
  * chooses one edge server to send a fraction x_k of the parts to. The remaining 1-x_k parts are computed locally
    * x_k ∈ {l / N_x | 0 ≤ l ≤ N_x, l ∈ ℤ}
    * i.e. the action is [i_k, x_k], where i indicates which edge server to upload to, and x_k indicates how much data to upload v.s. process locally
  * the system state is s_k = [ each radio link data rate B_i^(k-1), estimated harvested energy, current battery level]
* (1) the time   it takes to compute locally
* (2) the energy it takes to compute locally
* (3) the time   it takes to offload
* (4) the energy it takes to offload
* (5) battery at time k+1
* (6) ρ_k, the harvested energy for RF
* (7) error in estimates of the harvested energy
* (8) utility function

* default configuration:
  * time slot lasts 1s
  * N = 1000 (number of CPU cycles it takes to process each bit of input data)
  * ς = ???
